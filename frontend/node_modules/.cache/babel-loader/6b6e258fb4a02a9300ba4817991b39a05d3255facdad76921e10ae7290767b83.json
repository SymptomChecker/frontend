{"ast":null,"code":"var _jsxFileName = \"/Users/pankajchakrabarty/Desktop/symptom-checker-frontend/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport SymptomInput from \"./components/SymptomInput\";\nimport ResultsDisplay from \"./components/ResultsDisplay\";\nimport Disclaimer from \"./components/Disclaimer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [conversation, setConversation] = useState([]);\n  const [symptoms, setSymptoms] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [displayedMessages, setDisplayedMessages] = useState([]);\n\n  // Helper: display messages step by step for chat realism\n  useEffect(() => {\n    if (conversation.length === 0) {\n      setDisplayedMessages([]);\n      return;\n    }\n    let index = 0;\n    setDisplayedMessages([]);\n    const interval = setInterval(() => {\n      if (index >= conversation.length) {\n        clearInterval(interval);\n        return;\n      }\n      setDisplayedMessages(prev => [...prev, conversation[index]]);\n      index++;\n    }, 600); // 0.6s per message\n\n    return () => clearInterval(interval);\n  }, [conversation]);\n  const handleCheckSymptoms = async () => {\n    if (!symptoms.trim()) return;\n    setLoading(true);\n    setConversation([]);\n    setResults([]);\n    try {\n      const response = await fetch(\"http://localhost:5001/api/check-symptoms\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          symptoms\n        })\n      });\n      const data = await response.json();\n      setConversation(data.conversation || []);\n      setResults(data.results || []);\n    } catch (error) {\n      console.error(\"Error fetching results:\", error);\n      setResults([]);\n      setConversation([{\n        role: \"assistant\",\n        text: \"Sorry, something went wrong. Please try again later.\"\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Medichat Symptom Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"app-subtitle\",\n      children: \"Describe your symptoms naturally, and we'll suggest potential conditions.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SymptomInput, {\n      symptoms: symptoms,\n      setSymptoms: setSymptoms,\n      onCheck: handleCheckSymptoms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"processing\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ai-icon\",\n        children: \"\\uD83E\\uDD16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), \" Processing with NLP...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), displayedMessages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-box\",\n      children: displayedMessages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.role === \"assistant\" ? \"ai-message\" : \"user-message\"}`,\n        children: [msg.role === \"assistant\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ai-icon\",\n          children: \"\\uD83E\\uDD16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 44\n        }, this), msg.role === \"user\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user-icon\",\n          children: \"\\uD83E\\uDDD1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 39\n        }, this), msg.text]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), !loading && results.length > 0 && /*#__PURE__*/_jsxDEV(ResultsDisplay, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(Disclaimer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uaB1Sn+D/B0z+n6zMoQIg74gsws=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SymptomInput","ResultsDisplay","Disclaimer","jsxDEV","_jsxDEV","App","_s","conversation","setConversation","symptoms","setSymptoms","results","setResults","loading","setLoading","displayedMessages","setDisplayedMessages","length","index","interval","setInterval","clearInterval","prev","handleCheckSymptoms","trim","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","role","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCheck","map","msg","idx","_c","$RefreshReg$"],"sources":["/Users/pankajchakrabarty/Desktop/symptom-checker-frontend/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport SymptomInput from \"./components/SymptomInput\";\nimport ResultsDisplay from \"./components/ResultsDisplay\";\nimport Disclaimer from \"./components/Disclaimer\";\n\nexport default function App() {\n  const [conversation, setConversation] = useState([]);\n  const [symptoms, setSymptoms] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [displayedMessages, setDisplayedMessages] = useState([]);\n\n  // Helper: display messages step by step for chat realism\n  useEffect(() => {\n    if (conversation.length === 0) {\n      setDisplayedMessages([]);\n      return;\n    }\n\n    let index = 0;\n    setDisplayedMessages([]);\n\n    const interval = setInterval(() => {\n      if (index >= conversation.length) {\n        clearInterval(interval);\n        return;\n      }\n      setDisplayedMessages((prev) => [...prev, conversation[index]]);\n      index++;\n    }, 600); // 0.6s per message\n\n    return () => clearInterval(interval);\n  }, [conversation]);\n\n  const handleCheckSymptoms = async () => {\n    if (!symptoms.trim()) return;\n    setLoading(true);\n    setConversation([]);\n    setResults([]);\n\n    try {\n      const response = await fetch(\"http://localhost:5001/api/check-symptoms\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ symptoms }),\n      });\n\n      const data = await response.json();\n      setConversation(data.conversation || []);\n      setResults(data.results || []);\n    } catch (error) {\n      console.error(\"Error fetching results:\", error);\n      setResults([]);\n      setConversation([\n        { role: \"assistant\", text: \"Sorry, something went wrong. Please try again later.\" },\n      ]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"app-title\">Medichat Symptom Checker</h1>\n      <p className=\"app-subtitle\">\n        Describe your symptoms naturally, and we'll suggest potential conditions.\n      </p>\n\n      <SymptomInput\n        symptoms={symptoms}\n        setSymptoms={setSymptoms}\n        onCheck={handleCheckSymptoms}\n      />\n\n      {loading && (\n        <div className=\"processing\">\n          <span className=\"ai-icon\">ðŸ¤–</span> Processing with NLP...\n        </div>\n      )}\n\n      {/* Conversational chat display */}\n      {displayedMessages.length > 0 && (\n        <div className=\"conversation-box\">\n          {displayedMessages.map((msg, idx) => (\n            <div\n              key={idx}\n              className={`chat-message ${msg.role === \"assistant\" ? \"ai-message\" : \"user-message\"}`}\n            >\n              {msg.role === \"assistant\" && <span className=\"ai-icon\">ðŸ¤–</span>}\n              {msg.role === \"user\" && <span className=\"user-icon\">ðŸ§‘</span>}\n              {msg.text}\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Results section */}\n      {!loading && results.length > 0 && <ResultsDisplay results={results} />}\n\n      <Disclaimer />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}