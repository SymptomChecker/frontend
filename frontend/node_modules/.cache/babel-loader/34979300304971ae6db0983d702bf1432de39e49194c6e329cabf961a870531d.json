{"ast":null,"code":"var _jsxFileName = \"/Users/pankajchakrabarty/Desktop/symptom-checker-frontend/src/components/SymptomInput.js\",\n  _s = $RefreshSig$();\n// src/components/SymptomInput.js\nimport React, { useState } from 'react';\nimport './SymptomInput.css'; // For component-specific styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SymptomInput({\n  onSubmit,\n  isLoading\n}) {\n  _s();\n  const [currentSymptoms, setCurrentSymptoms] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentSymptoms.trim() && !isLoading) {\n      onSubmit(currentSymptoms);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"symptom-input-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"symptoms-textarea\",\n      children: \"What symptoms are you experiencing?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"symptoms-textarea\",\n      value: currentSymptoms,\n      onChange: e => setCurrentSymptoms(e.target.value),\n      placeholder: \"e.g., I have a bad headache, a persistent cough, and a fever of 101\\xB0F. My throat also feels sore.\",\n      rows: \"6\",\n      disabled: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isLoading,\n      children: isLoading ? 'Checking Symptoms...' : 'Check Symptoms'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(SymptomInput, \"BJix2aG+nyHWvj0AsRJ19Q+feko=\");\n_c = SymptomInput;\nexport default SymptomInput;\nvar _c;\n$RefreshReg$(_c, \"SymptomInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SymptomInput","onSubmit","isLoading","_s","currentSymptoms","setCurrentSymptoms","handleSubmit","e","preventDefault","trim","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","target","placeholder","rows","disabled","type","_c","$RefreshReg$"],"sources":["/Users/pankajchakrabarty/Desktop/symptom-checker-frontend/src/components/SymptomInput.js"],"sourcesContent":["// src/components/SymptomInput.js\nimport React, { useState } from 'react';\nimport './SymptomInput.css'; // For component-specific styles\n\nfunction SymptomInput({ onSubmit, isLoading }) {\n  const [currentSymptoms, setCurrentSymptoms] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (currentSymptoms.trim() && !isLoading) {\n      onSubmit(currentSymptoms);\n    }\n  };\n\n  return (\n    <form className=\"symptom-input-form\" onSubmit={handleSubmit}>\n      <label htmlFor=\"symptoms-textarea\">\n        What symptoms are you experiencing?\n      </label>\n      <textarea\n        id=\"symptoms-textarea\"\n        value={currentSymptoms}\n        onChange={(e) => setCurrentSymptoms(e.target.value)}\n        placeholder=\"e.g., I have a bad headache, a persistent cough, and a fever of 101Â°F. My throat also feels sore.\"\n        rows=\"6\"\n        disabled={isLoading}\n      ></textarea>\n      <button type=\"submit\" disabled={isLoading}>\n        {isLoading ? 'Checking Symptoms...' : 'Check Symptoms'}\n      </button>\n      {isLoading && <div className=\"spinner\"></div>} {/* Basic loading spinner */}\n    </form>\n  );\n}\n\nexport default SymptomInput;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIJ,eAAe,CAACK,IAAI,CAAC,CAAC,IAAI,CAACP,SAAS,EAAE;MACxCD,QAAQ,CAACG,eAAe,CAAC;IAC3B;EACF,CAAC;EAED,oBACEL,OAAA;IAAMW,SAAS,EAAC,oBAAoB;IAACT,QAAQ,EAAEK,YAAa;IAAAK,QAAA,gBAC1DZ,OAAA;MAAOa,OAAO,EAAC,mBAAmB;MAAAD,QAAA,EAAC;IAEnC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACRjB,OAAA;MACEkB,EAAE,EAAC,mBAAmB;MACtBC,KAAK,EAAEd,eAAgB;MACvBe,QAAQ,EAAGZ,CAAC,IAAKF,kBAAkB,CAACE,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;MACpDG,WAAW,EAAC,sGAAmG;MAC/GC,IAAI,EAAC,GAAG;MACRC,QAAQ,EAAErB;IAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACZjB,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAACD,QAAQ,EAAErB,SAAU;MAAAS,QAAA,EACvCT,SAAS,GAAG,sBAAsB,GAAG;IAAgB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,EACRd,SAAS,iBAAIH,OAAA;MAAKW,SAAS,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAAC,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEX;AAACb,EAAA,CA7BQH,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AA+BrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}