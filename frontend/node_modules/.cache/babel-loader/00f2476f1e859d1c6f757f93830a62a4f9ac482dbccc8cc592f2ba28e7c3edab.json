{"ast":null,"code":"var _jsxFileName = \"/Users/pankajchakrabarty/Desktop/symptom-checker-frontend/frontend/src/components/SymptomInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"./SymptomInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SymptomInput({\n  symptoms,\n  setSymptoms,\n  onCheck\n}) {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const recognitionRef = useRef(null);\n  const silenceTimer = useRef(null);\n  const finalTranscript = useRef(\"\");\n\n  // ðŸ”Š Simple beep using Web Audio API\n  const playBeep = (frequency = 800, duration = 200) => {\n    const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n    const oscillator = audioCtx.createOscillator();\n    const gainNode = audioCtx.createGain();\n    oscillator.connect(gainNode);\n    gainNode.connect(audioCtx.destination);\n    oscillator.type = \"sine\";\n    oscillator.frequency.value = frequency;\n    oscillator.start();\n    gainNode.gain.setValueAtTime(0.2, audioCtx.currentTime);\n    oscillator.stop(audioCtx.currentTime + duration / 1000);\n  };\n  const handleVoiceInput = () => {\n    if (!(\"webkitSpeechRecognition\" in window || \"SpeechRecognition\" in window)) {\n      alert(\"Sorry, your browser does not support speech recognition.\");\n      return;\n    }\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\n    // Stop any existing recognition\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      recognitionRef.current = null;\n    }\n    const recognition = new SpeechRecognition();\n    recognitionRef.current = recognition;\n    recognition.continuous = true; // keep listening\n    recognition.interimResults = false; // only final results\n    recognition.lang = \"en-US\";\n    finalTranscript.current = \"\";\n    setIsListening(true);\n    playBeep(900, 180); // ðŸ”Š Start beep\n\n    // Clear previous silence timer\n    if (silenceTimer.current) clearTimeout(silenceTimer.current);\n    recognition.start();\n    recognition.onresult = event => {\n      const transcript = event.results[event.results.length - 1][0].transcript.trim();\n      finalTranscript.current += \" \" + transcript;\n\n      // Update textarea immediately\n      setSymptoms(finalTranscript.current.trim());\n\n      // Reset silence timer (3 seconds)\n      if (silenceTimer.current) clearTimeout(silenceTimer.current);\n      silenceTimer.current = setTimeout(() => {\n        if (recognitionRef.current) recognitionRef.current.stop();\n      }, 3000);\n    };\n    recognition.onend = () => {\n      setIsListening(false);\n      playBeep(400, 180); // ðŸ”Š Stop beep\n\n      const finalText = finalTranscript.current.trim();\n      if (finalText.length > 0) {\n        // Auto-trigger the Check Symptoms button with latest transcript\n        setTimeout(() => {\n          onCheck(finalText);\n        }, 500);\n      }\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error:\", event.error);\n      setIsListening(false);\n      if (recognitionRef.current) recognitionRef.current.stop();\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"symptom-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textarea-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"symptom-textarea\",\n        placeholder: \"e.g., I have a bad cough, sore throat, and I'm very tired.\",\n        value: symptoms,\n        onChange: e => setSymptoms(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mic-icon ${isListening ? \"listening\" : \"\"}`,\n        onClick: handleVoiceInput,\n        title: isListening ? \"Listening...\" : \"Speak\",\n        children: isListening ? /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          style: {\n            fill: \"#ff0000\",\n            animation: \"pulse 1s infinite\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 14a3 3 0 0 0 3-3V5a3 3 0 0 0-6 0v6a3 3 0 0 0 3 3zm5-3a5 5 0 0 1-10 0H5a7 7 0 0 0 14 0h-2zM11 18h2v3h-2v-3z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 14a3 3 0 0 0 3-3V5a3 3 0 0 0-6 0v6a3 3 0 0 0 3 3zm5-3a5 5 0 0 1-10 0H5a7 7 0 0 0 14 0h-2zM11 18h2v3h-2v-3z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"check-btn\",\n      onClick: () => onCheck(finalTranscript.current.trim()),\n      children: \"Check Symptoms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(SymptomInput, \"fMQcFABSVL320oYeyuuafo3RwyU=\");\n_c = SymptomInput;\nexport default SymptomInput;\nvar _c;\n$RefreshReg$(_c, \"SymptomInput\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","SymptomInput","symptoms","setSymptoms","onCheck","_s","isListening","setIsListening","recognitionRef","silenceTimer","finalTranscript","playBeep","frequency","duration","audioCtx","window","AudioContext","webkitAudioContext","oscillator","createOscillator","gainNode","createGain","connect","destination","type","value","start","gain","setValueAtTime","currentTime","stop","handleVoiceInput","alert","SpeechRecognition","webkitSpeechRecognition","current","recognition","continuous","interimResults","lang","clearTimeout","onresult","event","transcript","results","length","trim","setTimeout","onend","finalText","onerror","console","error","className","children","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","xmlns","viewBox","style","fill","animation","d","_c","$RefreshReg$"],"sources":["/Users/pankajchakrabarty/Desktop/symptom-checker-frontend/frontend/src/components/SymptomInput.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./SymptomInput.css\";\n\nfunction SymptomInput({ symptoms, setSymptoms, onCheck }) {\n  const [isListening, setIsListening] = useState(false);\n  const recognitionRef = useRef(null);\n  const silenceTimer = useRef(null);\n  const finalTranscript = useRef(\"\");\n\n  // ðŸ”Š Simple beep using Web Audio API\n  const playBeep = (frequency = 800, duration = 200) => {\n    const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n    const oscillator = audioCtx.createOscillator();\n    const gainNode = audioCtx.createGain();\n    oscillator.connect(gainNode);\n    gainNode.connect(audioCtx.destination);\n    oscillator.type = \"sine\";\n    oscillator.frequency.value = frequency;\n    oscillator.start();\n    gainNode.gain.setValueAtTime(0.2, audioCtx.currentTime);\n    oscillator.stop(audioCtx.currentTime + duration / 1000);\n  };\n\n  const handleVoiceInput = () => {\n    if (!(\"webkitSpeechRecognition\" in window || \"SpeechRecognition\" in window)) {\n      alert(\"Sorry, your browser does not support speech recognition.\");\n      return;\n    }\n\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\n    // Stop any existing recognition\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      recognitionRef.current = null;\n    }\n\n    const recognition = new SpeechRecognition();\n    recognitionRef.current = recognition;\n    recognition.continuous = true; // keep listening\n    recognition.interimResults = false; // only final results\n    recognition.lang = \"en-US\";\n\n    finalTranscript.current = \"\";\n    setIsListening(true);\n    playBeep(900, 180); // ðŸ”Š Start beep\n\n    // Clear previous silence timer\n    if (silenceTimer.current) clearTimeout(silenceTimer.current);\n\n    recognition.start();\n\n    recognition.onresult = (event) => {\n      const transcript = event.results[event.results.length - 1][0].transcript.trim();\n      finalTranscript.current += \" \" + transcript;\n\n      // Update textarea immediately\n      setSymptoms(finalTranscript.current.trim());\n\n      // Reset silence timer (3 seconds)\n      if (silenceTimer.current) clearTimeout(silenceTimer.current);\n      silenceTimer.current = setTimeout(() => {\n        if (recognitionRef.current) recognitionRef.current.stop();\n      }, 3000);\n    };\n\n    recognition.onend = () => {\n      setIsListening(false);\n      playBeep(400, 180); // ðŸ”Š Stop beep\n\n      const finalText = finalTranscript.current.trim();\n      if (finalText.length > 0) {\n        // Auto-trigger the Check Symptoms button with latest transcript\n        setTimeout(() => {\n          onCheck(finalText);\n        }, 500);\n      }\n    };\n\n    recognition.onerror = (event) => {\n      console.error(\"Speech recognition error:\", event.error);\n      setIsListening(false);\n      if (recognitionRef.current) recognitionRef.current.stop();\n    };\n  };\n\n  return (\n    <div className=\"symptom-input-container\">\n      <div className=\"textarea-wrapper\">\n        <textarea\n          className=\"symptom-textarea\"\n          placeholder=\"e.g., I have a bad cough, sore throat, and I'm very tired.\"\n          value={symptoms}\n          onChange={(e) => setSymptoms(e.target.value)}\n        />\n        {/* ðŸŽ¤ Mic Icon */}\n        <div\n          className={`mic-icon ${isListening ? \"listening\" : \"\"}`}\n          onClick={handleVoiceInput}\n          title={isListening ? \"Listening...\" : \"Speak\"}\n        >\n          {isListening ? (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              style={{ fill: \"#ff0000\", animation: \"pulse 1s infinite\" }}\n            >\n              <path d=\"M12 14a3 3 0 0 0 3-3V5a3 3 0 0 0-6 0v6a3 3 0 0 0 3 3zm5-3a5 5 0 0 1-10 0H5a7 7 0 0 0 14 0h-2zM11 18h2v3h-2v-3z\" />\n            </svg>\n          ) : (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n              <path d=\"M12 14a3 3 0 0 0 3-3V5a3 3 0 0 0-6 0v6a3 3 0 0 0 3 3zm5-3a5 5 0 0 1-10 0H5a7 7 0 0 0 14 0h-2zM11 18h2v3h-2v-3z\" />\n            </svg>\n          )}\n        </div>\n      </div>\n\n      <button className=\"check-btn\" onClick={() => onCheck(finalTranscript.current.trim())}>\n        Check Symptoms\n      </button>\n    </div>\n  );\n}\n\nexport default SymptomInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}