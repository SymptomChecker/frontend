{"ast":null,"code":"var _jsxFileName = \"/Users/pankajchakrabarty/Desktop/symptom-checker-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport SymptomInput from \"./components/SymptomInput\";\nimport ResultsDisplay from \"./components/ResultsDisplay\";\nimport Disclaimer from \"./components/Disclaimer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [symptoms, setSymptoms] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleCheckSymptoms = () => {\n    setLoading(true);\n\n    // Simulating AI/NLP backend response\n    setTimeout(() => {\n      setResults([{\n        condition: \"Common Cold\",\n        description: \"A viral infection of your nose and throat (upper respiratory tract).\",\n        confidence: 85\n      }, {\n        condition: \"Flu (Influenza)\",\n        description: \"Symptoms you mentioned: Cough, Sore Throat, Tiredness. May include runny nose, sweating, mild fever.\",\n        confidence: 70\n      }, {\n        condition: \"Strep Throat\",\n        description: \"Common symptoms you didnâ€™t mention but could be related.\",\n        confidence: 55\n      }]);\n      setLoading(false);\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"AI Symptom Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"app-subtitle\",\n      children: \"Describe your symptoms naturally, and we'll suggest potential conditions.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SymptomInput, {\n      symptoms: symptoms,\n      setSymptoms: setSymptoms,\n      onCheck: handleCheckSymptoms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"processing\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ai-icon\",\n        children: \"\\uD83E\\uDD16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), \" Processing with NLP...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ResultsDisplay, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Disclaimer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZQ66C7bLdc3G4/2tqHp6DTZu6v8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SymptomInput","ResultsDisplay","Disclaimer","jsxDEV","_jsxDEV","App","_s","symptoms","setSymptoms","results","setResults","loading","setLoading","handleCheckSymptoms","setTimeout","condition","description","confidence","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCheck","_c","$RefreshReg$"],"sources":["/Users/pankajchakrabarty/Desktop/symptom-checker-frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport SymptomInput from \"./components/SymptomInput\";\nimport ResultsDisplay from \"./components/ResultsDisplay\";\nimport Disclaimer from \"./components/Disclaimer\";\n\nfunction App() {\n  const [symptoms, setSymptoms] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleCheckSymptoms = () => {\n    setLoading(true);\n\n    // Simulating AI/NLP backend response\n    setTimeout(() => {\n      setResults([\n        {\n          condition: \"Common Cold\",\n          description: \"A viral infection of your nose and throat (upper respiratory tract).\",\n          confidence: 85,\n        },\n        {\n          condition: \"Flu (Influenza)\",\n          description:\n            \"Symptoms you mentioned: Cough, Sore Throat, Tiredness. May include runny nose, sweating, mild fever.\",\n          confidence: 70,\n        },\n        {\n          condition: \"Strep Throat\",\n          description: \"Common symptoms you didnâ€™t mention but could be related.\",\n          confidence: 55,\n        },\n      ]);\n      setLoading(false);\n    }, 2000);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"app-title\">AI Symptom Checker</h1>\n      <p className=\"app-subtitle\">\n        Describe your symptoms naturally, and we'll suggest potential conditions.\n      </p>\n\n      <SymptomInput\n        symptoms={symptoms}\n        setSymptoms={setSymptoms}\n        onCheck={handleCheckSymptoms}\n      />\n\n      {loading ? (\n        <div className=\"processing\">\n          <span className=\"ai-icon\">ðŸ¤–</span> Processing with NLP...\n        </div>\n      ) : (\n        <ResultsDisplay results={results} />\n      )}\n\n      <Disclaimer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMc,mBAAmB,GAAGA,CAAA,KAAM;IAChCD,UAAU,CAAC,IAAI,CAAC;;IAEhB;IACAE,UAAU,CAAC,MAAM;MACfJ,UAAU,CAAC,CACT;QACEK,SAAS,EAAE,aAAa;QACxBC,WAAW,EAAE,sEAAsE;QACnFC,UAAU,EAAE;MACd,CAAC,EACD;QACEF,SAAS,EAAE,iBAAiB;QAC5BC,WAAW,EACT,sGAAsG;QACxGC,UAAU,EAAE;MACd,CAAC,EACD;QACEF,SAAS,EAAE,cAAc;QACzBC,WAAW,EAAE,0DAA0D;QACvEC,UAAU,EAAE;MACd,CAAC,CACF,CAAC;MACFL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACER,OAAA;IAAKc,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5Bf,OAAA;MAAIc,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDnB,OAAA;MAAGc,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAE5B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEJnB,OAAA,CAACJ,YAAY;MACXO,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA,WAAY;MACzBgB,OAAO,EAAEX;IAAoB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,EAEDZ,OAAO,gBACNP,OAAA;MAAKc,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBf,OAAA;QAAMc,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,2BACrC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAENnB,OAAA,CAACH,cAAc;MAACQ,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACpC,eAEDnB,OAAA,CAACF,UAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV;AAACjB,EAAA,CAxDQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA0DZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}