{"ast":null,"code":"var _jsxFileName = \"/Users/pankajchakrabarty/Desktop/symptom-checker-frontend/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SymptomChecker() {\n  _s();\n  const [symptoms, setSymptoms] = useState(\"\");\n  const [conditions, setConditions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/symptoms\", {\n        symptoms: symptoms.split(\",\").map(s => s.trim())\n      });\n      setConditions(response.data.conditions);\n    } catch (err) {\n      console.error(err);\n      alert(\"Error fetching conditions\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Symptom Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Enter symptoms separated by commas\",\n      value: symptoms,\n      onChange: e => setSymptoms(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: loading,\n      children: loading ? \"Checking...\" : \"Check Conditions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: conditions.map((c, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [c.condition, \" \\u2014 \", c.probability, \"%\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(SymptomChecker, \"9z71JrAshBQCb213REzlVah3TMs=\");\n_c = SymptomChecker;\nvar _c;\n$RefreshReg$(_c, \"SymptomChecker\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","SymptomChecker","_s","symptoms","setSymptoms","conditions","setConditions","loading","setLoading","handleSubmit","response","post","split","map","s","trim","data","err","console","error","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","disabled","c","i","condition","probability","_c","$RefreshReg$"],"sources":["/Users/pankajchakrabarty/Desktop/symptom-checker-frontend/frontend/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function SymptomChecker() {\n  const [symptoms, setSymptoms] = useState(\"\");\n  const [conditions, setConditions] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/symptoms\", {\n        symptoms: symptoms.split(\",\").map(s => s.trim()),\n      });\n      setConditions(response.data.conditions);\n    } catch (err) {\n      console.error(err);\n      alert(\"Error fetching conditions\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Symptom Checker</h1>\n      <textarea\n        placeholder=\"Enter symptoms separated by commas\"\n        value={symptoms}\n        onChange={(e) => setSymptoms(e.target.value)}\n      />\n      <button onClick={handleSubmit} disabled={loading}>\n        {loading ? \"Checking...\" : \"Check Conditions\"}\n      </button>\n\n      <ul>\n        {conditions.map((c, i) => (\n          <li key={i}>\n            {c.condition} â€” {c.probability}%\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,oCAAoC,EAAE;QACtER,QAAQ,EAAEA,QAAQ,CAACS,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC;MACjD,CAAC,CAAC;MACFT,aAAa,CAACI,QAAQ,CAACM,IAAI,CAACX,UAAU,CAAC;IACzC,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBG,KAAK,CAAC,2BAA2B,CAAC;IACpC,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACER,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBzB,OAAA;MACE0B,WAAW,EAAC,oCAAoC;MAChDC,KAAK,EAAExB,QAAS;MAChByB,QAAQ,EAAGC,CAAC,IAAKzB,WAAW,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFzB,OAAA;MAAQ+B,OAAO,EAAEtB,YAAa;MAACuB,QAAQ,EAAEzB,OAAQ;MAAAc,QAAA,EAC9Cd,OAAO,GAAG,aAAa,GAAG;IAAkB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eAETzB,OAAA;MAAAqB,QAAA,EACGhB,UAAU,CAACQ,GAAG,CAAC,CAACoB,CAAC,EAAEC,CAAC,kBACnBlC,OAAA;QAAAqB,QAAA,GACGY,CAAC,CAACE,SAAS,EAAC,UAAG,EAACF,CAAC,CAACG,WAAW,EAAC,GACjC;MAAA,GAFSF,CAAC;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACvB,EAAA,CAzCuBD,cAAc;AAAAoC,EAAA,GAAdpC,cAAc;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}