{"ast":null,"code":"var _jsxFileName = \"/Users/pankajchakrabarty/Desktop/symptom-checker-frontend/frontend/src/components/SymptomInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"./SymptomInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SymptomInput({\n  symptoms,\n  setSymptoms,\n  onCheck\n}) {\n  _s();\n  const [listening, setListening] = useState(false);\n  const recognitionRef = useRef(null);\n\n  // ðŸŽ¤ Initialize voice recognition\n  const startListening = () => {\n    if (!(\"webkitSpeechRecognition\" in window || \"SpeechRecognition\" in window)) {\n      alert(\"Sorry, your browser does not support voice recognition.\");\n      return;\n    }\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n    recognition.lang = \"en-US\";\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n    recognition.onstart = () => setListening(true);\n    recognition.onend = () => setListening(false);\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error:\", event.error);\n      setListening(false);\n    };\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setSymptoms(prev => prev ? prev + \" \" + transcript : transcript);\n    };\n    recognitionRef.current = recognition;\n    recognition.start();\n  };\n  const stopListening = () => {\n    var _recognitionRef$curre;\n    (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n    setListening(false);\n  };\n  const toggleListening = () => {\n    if (listening) stopListening();else startListening();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"symptom-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textarea-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"symptom-textarea\",\n        placeholder: \"e.g., I have a bad cough, sore throat, and I'm very tired.\",\n        value: symptoms,\n        onChange: e => setSymptoms(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `mic-btn ${listening ? \"listening\" : \"\"}`,\n        onClick: toggleListening,\n        title: listening ? \"Stop listening\" : \"Start voice input\",\n        children: \"\\uD83C\\uDFA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"check-btn\",\n      onClick: onCheck,\n      children: \"Check Symptoms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(SymptomInput, \"qXVrMPS3PDzPJqXKdaTsxxMXSBs=\");\n_c = SymptomInput;\nexport default SymptomInput;\nvar _c;\n$RefreshReg$(_c, \"SymptomInput\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","SymptomInput","symptoms","setSymptoms","onCheck","_s","listening","setListening","recognitionRef","startListening","window","alert","SpeechRecognition","webkitSpeechRecognition","recognition","lang","interimResults","maxAlternatives","onstart","onend","onerror","event","console","error","onresult","transcript","results","prev","current","start","stopListening","_recognitionRef$curre","stop","toggleListening","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","title","_c","$RefreshReg$"],"sources":["/Users/pankajchakrabarty/Desktop/symptom-checker-frontend/frontend/src/components/SymptomInput.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./SymptomInput.css\";\n\nfunction SymptomInput({ symptoms, setSymptoms, onCheck }) {\n  const [listening, setListening] = useState(false);\n  const recognitionRef = useRef(null);\n\n  // ðŸŽ¤ Initialize voice recognition\n  const startListening = () => {\n    if (!(\"webkitSpeechRecognition\" in window || \"SpeechRecognition\" in window)) {\n      alert(\"Sorry, your browser does not support voice recognition.\");\n      return;\n    }\n\n    const SpeechRecognition =\n      window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n    recognition.lang = \"en-US\";\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n\n    recognition.onstart = () => setListening(true);\n    recognition.onend = () => setListening(false);\n    recognition.onerror = (event) => {\n      console.error(\"Speech recognition error:\", event.error);\n      setListening(false);\n    };\n\n    recognition.onresult = (event) => {\n      const transcript = event.results[0][0].transcript;\n      setSymptoms((prev) => (prev ? prev + \" \" + transcript : transcript));\n    };\n\n    recognitionRef.current = recognition;\n    recognition.start();\n  };\n\n  const stopListening = () => {\n    recognitionRef.current?.stop();\n    setListening(false);\n  };\n\n  const toggleListening = () => {\n    if (listening) stopListening();\n    else startListening();\n  };\n\n  return (\n    <div className=\"symptom-input-container\">\n      <div className=\"textarea-wrapper\">\n        <textarea\n          className=\"symptom-textarea\"\n          placeholder=\"e.g., I have a bad cough, sore throat, and I'm very tired.\"\n          value={symptoms}\n          onChange={(e) => setSymptoms(e.target.value)}\n        />\n        <button\n          type=\"button\"\n          className={`mic-btn ${listening ? \"listening\" : \"\"}`}\n          onClick={toggleListening}\n          title={listening ? \"Stop listening\" : \"Start voice input\"}\n        >\n          ðŸŽ¤\n        </button>\n      </div>\n\n      <button className=\"check-btn\" onClick={onCheck}>\n        Check Symptoms\n      </button>\n    </div>\n  );\n}\n\nexport default SymptomInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}