{"ast":null,"code":"var _jsxFileName = \"/Users/pankajchakrabarty/Desktop/symptom-checker-frontend/frontend/src/components/SymptomInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"./SymptomInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SymptomInput({\n  symptoms,\n  setSymptoms,\n  onCheck\n}) {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const recognitionRef = useRef(null);\n  const silenceTimer = useRef(null);\n  const interimTranscript = useRef(\"\");\n  const handleVoiceInput = () => {\n    if (!(\"webkitSpeechRecognition\" in window || \"SpeechRecognition\" in window)) {\n      alert(\"Sorry, your browser does not support speech recognition.\");\n      return;\n    }\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\n    // Stop existing recognition if running\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      recognitionRef.current = null;\n    }\n    const recognition = new SpeechRecognition();\n    recognitionRef.current = recognition;\n    recognition.continuous = true;\n    recognition.interimResults = false;\n    recognition.lang = \"en-US\";\n    setIsListening(true);\n    interimTranscript.current = \"\";\n    recognition.start();\n    recognition.onresult = event => {\n      const transcript = event.results[event.results.length - 1][0].transcript.trim();\n      interimTranscript.current += \" \" + transcript;\n      setSymptoms(prev => prev ? `${prev} ${transcript}` : transcript);\n\n      // Reset silence timer on every detected speech\n      if (silenceTimer.current) clearTimeout(silenceTimer.current);\n      silenceTimer.current = setTimeout(() => {\n        recognition.stop(); // Stop if 3s silence\n      }, 3000);\n    };\n    recognition.onend = () => {\n      setIsListening(false);\n\n      // Auto-submit if user actually said something\n      const finalText = interimTranscript.current.trim();\n      if (finalText.length > 0) {\n        onCheck();\n      }\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error:\", event.error);\n      setIsListening(false);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"symptom-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textarea-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"symptom-textarea\",\n        placeholder: \"e.g., I have a bad cough, sore throat, and I'm very tired.\",\n        value: symptoms,\n        onChange: e => setSymptoms(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mic-icon ${isListening ? \"listening\" : \"\"}`,\n        onClick: handleVoiceInput,\n        title: isListening ? \"Listening...\" : \"Speak\",\n        children: isListening ? /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          style: {\n            fill: \"#ff0000\",\n            animation: \"pulse 1s infinite\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 14a3 3 0 0 0 3-3V5a3 3 0 0 0-6 0v6a3 3 0 0 0 3 3zm5-3a5 5 0 0 1-10 0H5a7 7 0 0 0 14 0h-2zM11 18h2v3h-2v-3z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 14a3 3 0 0 0 3-3V5a3 3 0 0 0-6 0v6a3 3 0 0 0 3 3zm5-3a5 5 0 0 1-10 0H5a7 7 0 0 0 14 0h-2zM11 18h2v3h-2v-3z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"check-btn\",\n      onClick: onCheck,\n      children: \"Check Symptoms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(SymptomInput, \"owEC4QPCrOmnUgJbd0S0y85X7F4=\");\n_c = SymptomInput;\nexport default SymptomInput;\nvar _c;\n$RefreshReg$(_c, \"SymptomInput\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","SymptomInput","symptoms","setSymptoms","onCheck","_s","isListening","setIsListening","recognitionRef","silenceTimer","interimTranscript","handleVoiceInput","window","alert","SpeechRecognition","webkitSpeechRecognition","current","stop","recognition","continuous","interimResults","lang","start","onresult","event","transcript","results","length","trim","prev","clearTimeout","setTimeout","onend","finalText","onerror","console","error","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","xmlns","viewBox","style","fill","animation","d","_c","$RefreshReg$"],"sources":["/Users/pankajchakrabarty/Desktop/symptom-checker-frontend/frontend/src/components/SymptomInput.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./SymptomInput.css\";\n\nfunction SymptomInput({ symptoms, setSymptoms, onCheck }) {\n  const [isListening, setIsListening] = useState(false);\n  const recognitionRef = useRef(null);\n  const silenceTimer = useRef(null);\n  const interimTranscript = useRef(\"\");\n\n  const handleVoiceInput = () => {\n    if (!(\"webkitSpeechRecognition\" in window || \"SpeechRecognition\" in window)) {\n      alert(\"Sorry, your browser does not support speech recognition.\");\n      return;\n    }\n\n    const SpeechRecognition =\n      window.SpeechRecognition || window.webkitSpeechRecognition;\n\n    // Stop existing recognition if running\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      recognitionRef.current = null;\n    }\n\n    const recognition = new SpeechRecognition();\n    recognitionRef.current = recognition;\n\n    recognition.continuous = true;\n    recognition.interimResults = false;\n    recognition.lang = \"en-US\";\n\n    setIsListening(true);\n    interimTranscript.current = \"\";\n\n    recognition.start();\n\n    recognition.onresult = (event) => {\n      const transcript = event.results[event.results.length - 1][0].transcript.trim();\n      interimTranscript.current += \" \" + transcript;\n      setSymptoms((prev) => (prev ? `${prev} ${transcript}` : transcript));\n\n      // Reset silence timer on every detected speech\n      if (silenceTimer.current) clearTimeout(silenceTimer.current);\n      silenceTimer.current = setTimeout(() => {\n        recognition.stop(); // Stop if 3s silence\n      }, 3000);\n    };\n\n    recognition.onend = () => {\n      setIsListening(false);\n\n      // Auto-submit if user actually said something\n      const finalText = interimTranscript.current.trim();\n      if (finalText.length > 0) {\n        onCheck();\n      }\n    };\n\n    recognition.onerror = (event) => {\n      console.error(\"Speech recognition error:\", event.error);\n      setIsListening(false);\n    };\n  };\n\n  return (\n    <div className=\"symptom-input-container\">\n      <div className=\"textarea-wrapper\">\n        <textarea\n          className=\"symptom-textarea\"\n          placeholder=\"e.g., I have a bad cough, sore throat, and I'm very tired.\"\n          value={symptoms}\n          onChange={(e) => setSymptoms(e.target.value)}\n        />\n        {/* ðŸŽ¤ Mic Icon */}\n        <div\n          className={`mic-icon ${isListening ? \"listening\" : \"\"}`}\n          onClick={handleVoiceInput}\n          title={isListening ? \"Listening...\" : \"Speak\"}\n        >\n          {isListening ? (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              style={{ fill: \"#ff0000\", animation: \"pulse 1s infinite\" }}\n            >\n              <path d=\"M12 14a3 3 0 0 0 3-3V5a3 3 0 0 0-6 0v6a3 3 0 0 0 3 3zm5-3a5 5 0 0 1-10 0H5a7 7 0 0 0 14 0h-2zM11 18h2v3h-2v-3z\" />\n            </svg>\n          ) : (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n              <path d=\"M12 14a3 3 0 0 0 3-3V5a3 3 0 0 0-6 0v6a3 3 0 0 0 3 3zm5-3a5 5 0 0 1-10 0H5a7 7 0 0 0 14 0h-2zM11 18h2v3h-2v-3z\" />\n            </svg>\n          )}\n        </div>\n      </div>\n\n      <button className=\"check-btn\" onClick={onCheck}>\n        Check Symptoms\n      </button>\n    </div>\n  );\n}\n\nexport default SymptomInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}