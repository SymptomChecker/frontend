{"ast":null,"code":"var _jsxFileName = \"/Users/pankajchakrabarty/Desktop/symptom-checker-frontend/frontend/src/components/SymptomInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SymptomInput({\n  symptoms,\n  setSymptoms,\n  onCheck,\n  selectedLanguage\n}) {\n  _s();\n  const [inputValue, setInputValue] = useState(symptoms);\n  const handleClick = () => {\n    if (!inputValue.trim()) return;\n    onCheck(inputValue); // same callback as voice input\n    setInputValue(\"\"); // clear input\n    setSymptoms(\"\"); // clear in parent state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"symptom-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      placeholder: \"Describe your symptoms...\",\n      onChange: e => {\n        setInputValue(e.target.value);\n        setSymptoms(e.target.value);\n      },\n      onKeyDown: e => {\n        if (e.key === \"Enter\") handleClick();\n      },\n      className: \"symptom-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      className: \"check-button\",\n      children: \"Check Symptoms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"voice-button\",\n      onClick: async () => {\n        // voice recognition logic here\n        const spokenText = await startVoiceRecognition();\n        onCheck(spokenText);\n      },\n      children: \"\\uD83C\\uDFA4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(SymptomInput, \"31BhwTQsaPJyXnLSFihxQnPECOQ=\");\n_c = SymptomInput;\nvar _c;\n$RefreshReg$(_c, \"SymptomInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SymptomInput","symptoms","setSymptoms","onCheck","selectedLanguage","_s","inputValue","setInputValue","handleClick","trim","className","children","type","value","placeholder","onChange","e","target","onKeyDown","key","fileName","_jsxFileName","lineNumber","columnNumber","onClick","spokenText","startVoiceRecognition","_c","$RefreshReg$"],"sources":["/Users/pankajchakrabarty/Desktop/symptom-checker-frontend/frontend/src/components/SymptomInput.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function SymptomInput({ symptoms, setSymptoms, onCheck, selectedLanguage }) {\n  const [inputValue, setInputValue] = useState(symptoms);\n\n  const handleClick = () => {\n    if (!inputValue.trim()) return;\n    onCheck(inputValue);  // same callback as voice input\n    setInputValue(\"\");    // clear input\n    setSymptoms(\"\");      // clear in parent state\n  };\n\n  return (\n    <div className=\"symptom-input-container\">\n      <input\n        type=\"text\"\n        value={inputValue}\n        placeholder=\"Describe your symptoms...\"\n        onChange={(e) => {\n          setInputValue(e.target.value);\n          setSymptoms(e.target.value);\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") handleClick();\n        }}\n        className=\"symptom-input\"\n      />\n      <button onClick={handleClick} className=\"check-button\">\n        Check Symptoms\n      </button>\n\n      {/* Optional: Voice input button */}\n      <button\n        className=\"voice-button\"\n        onClick={async () => {\n          // voice recognition logic here\n          const spokenText = await startVoiceRecognition();\n          onCheck(spokenText);\n        }}\n      >\n        ðŸŽ¤\n      </button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,OAAO;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EACzF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAACI,QAAQ,CAAC;EAEtD,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACF,UAAU,CAACG,IAAI,CAAC,CAAC,EAAE;IACxBN,OAAO,CAACG,UAAU,CAAC,CAAC,CAAE;IACtBC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAI;IACtBL,WAAW,CAAC,EAAE,CAAC,CAAC,CAAM;EACxB,CAAC;EAED,oBACEH,OAAA;IAAKW,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCZ,OAAA;MACEa,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEP,UAAW;MAClBQ,WAAW,EAAC,2BAA2B;MACvCC,QAAQ,EAAGC,CAAC,IAAK;QACfT,aAAa,CAACS,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC;QAC7BX,WAAW,CAACc,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC;MAC7B,CAAE;MACFK,SAAS,EAAGF,CAAC,IAAK;QAChB,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,EAAEX,WAAW,CAAC,CAAC;MACtC,CAAE;MACFE,SAAS,EAAC;IAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFxB,OAAA;MAAQyB,OAAO,EAAEhB,WAAY;MAACE,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAEvD;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGTxB,OAAA;MACEW,SAAS,EAAC,cAAc;MACxBc,OAAO,EAAE,MAAAA,CAAA,KAAY;QACnB;QACA,MAAMC,UAAU,GAAG,MAAMC,qBAAqB,CAAC,CAAC;QAChDvB,OAAO,CAACsB,UAAU,CAAC;MACrB,CAAE;MAAAd,QAAA,EACH;IAED;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAClB,EAAA,CA1CuBL,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}